/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter } from "ethers";
import { Provider } from "ethers/providers";
import { BigNumber } from "ethers/utils";
import { TransactionOverrides } from ".";

export class AssetManagerEscrow extends Contract {
  functions: {
    lockEscrow(
      _assetAddress: string,
      _assetManager: string,
      _amount: number | string | BigNumber,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    unlockEscrow(
      _assetAddress: string,
      _assetManager: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    becomeAssetManager(
      _assetAddress: string,
      _newAssetManager: string,
      _amount: number | string | BigNumber,
      _withhold: boolean,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    returnEscrow(
      _assetAddress: string,
      _oldAssetManager: string,
      _currentAssetManager: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    voteToBurn(
      _assetAddress: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    mutualBurn(
      _assetAddress: string,
      _amountToBurn: number | string | BigNumber,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    destroy(overrides?: TransactionOverrides): Promise<ContractTransaction>;

    database(): Promise<string>;
    events(): Promise<string>;
  };
  filters: {
    NotFinalized(): EventFilter;

    ROICheckpoint(checkpoint: null): EventFilter;
  };
}
