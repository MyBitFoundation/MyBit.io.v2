/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter } from "ethers";
import { Provider } from "ethers/providers";
import { BigNumber } from "ethers/utils";
import { TransactionOverrides } from ".";

export class ContractManager extends Contract {
  functions: {
    addContract(
      _name: string,
      _contractAddress: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    removeContract(
      _name: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    updateContract(
      _name: string,
      _newContractAddress: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    setContractStatePreferences(
      _acceptCurrentState: boolean,
      _ignoreStateChanges: boolean,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    database(): Promise<string>;
    events(): Promise<string>;
  };
  filters: {
    LogContractAdded(
      _contractAddress: null,
      _name: null,
      _blockNumber: null
    ): EventFilter;

    LogContractRemoved(
      contractToDelete: null,
      _name: null,
      _blockNumber: null
    ): EventFilter;

    LogContractUpdated(
      oldAddress: null,
      _name: null,
      _blockNumber: null
    ): EventFilter;

    LogNewContractLocation(
      _contractAddress: null,
      _name: null,
      _blockNumber: null
    ): EventFilter;

    LogContractStatePreferenceChanged(
      _user: string | null,
      _currentStateAcceptance: null,
      _ignoreStateChanges: null
    ): EventFilter;
  };
}
