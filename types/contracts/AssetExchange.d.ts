/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter } from "ethers";
import { Provider } from "ethers/providers";
import { BigNumber } from "ethers/utils";
import { TransactionOverrides } from ".";

export class AssetExchange extends Contract {
  functions: {
    orders(arg0: string, arg1: string): Promise<boolean>;

    weiOwed(arg0: string): Promise<BigNumber>;

    weiDeposited(arg0: string): Promise<BigNumber>;

    buyAsset(
      _assetAddress: string,
      _buyer: string,
      _seller: string,
      _amount: number | string | BigNumber,
      _price: number | string | BigNumber,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    sellAsset(
      _assetAddress: string,
      _seller: string,
      _buyer: string,
      _amount: number | string | BigNumber,
      _price: number | string | BigNumber,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    createBuyOrder(
      _assetAddress: string,
      _buyer: string,
      _amount: number | string | BigNumber,
      _price: number | string | BigNumber,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    createSellOrder(
      _assetAddress: string,
      _seller: string,
      _amount: number | string | BigNumber,
      _price: number | string | BigNumber,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    deleteOrder(
      _assetAddress: string,
      _orderMaker: string,
      _amount: number | string | BigNumber,
      _price: number | string | BigNumber,
      _buyOrder: boolean,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    withdraw(overrides?: TransactionOverrides): Promise<ContractTransaction>;

    destroy(
      _functionInitiator: string,
      _holdingAddress: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    database(): Promise<string>;
    events(): Promise<string>;
  };
  filters: {};
}
