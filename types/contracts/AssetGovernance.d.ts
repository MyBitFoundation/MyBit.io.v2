/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter } from "ethers";
import { Provider } from "ethers/providers";
import { BigNumber } from "ethers/utils";
import { TransactionOverrides } from ".";

export class AssetGovernance extends Contract {
  functions: {
    getProposalID(
      _executingContract: string,
      _assetID: string,
      _methodID: string,
      _parameterHash: string
    ): Promise<string>;

    isConsensusReached(_proposalID: string): Promise<boolean>;

    result(_proposalID: string): Promise<boolean>;

    proposalExtant(_proposalID: string): Promise<boolean>;

    propose(
      _executingContract: string,
      _assetID: string,
      _methodID: string,
      _parameterHash: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    voteForExecution(
      _proposalID: string,
      _amountToLock: number | string | BigNumber,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    unlockToken(
      _proposalID: string,
      _amountToUnlock: number | string | BigNumber,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    destroy(overrides?: TransactionOverrides): Promise<ContractTransaction>;

    database(): Promise<string>;
    consensus(): Promise<BigNumber>;
    events(): Promise<string>;
  };
  filters: {};
}
